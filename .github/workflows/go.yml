name: Build & Release

# Trigger on tags (stable releases) and master pushes (rolling prereleases)
on:
  push:
    branches:
      - master
    tags:
      - '*'

permissions:
  contents: write   # required to create releases & upload assets

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (fetch all tags & history)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go (optional, useful if your build needs it)
        uses: actions/setup-go@v5
        with:
          # change to your project's Go version if needed
          go-version: '1.25'

      # -----------------------
      # Tagged release (stable)
      # -----------------------
      - name: Run GoReleaser for tag (full publish)
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # -----------------------
      # Master rolling prerelease
      # -----------------------
      - name: Build snapshot artifacts (master)
        if: github.ref == 'refs/heads/master'
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          # build (snapshot) only — do not publish as a GitHub Release yet
          args: build --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create rolling prerelease and upload artifacts
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          # create an ephemeral tag/release tied to this commit
          tag_name: rolling-${{ github.sha }}
          release_name: rolling-${{ github.sha_short }}
          # short body — replace with body_path to post a file if you like
          body: Rolling prerelease for commit ${{ github.sha }}
          prerelease: true
          # upload everything produced by goreleaser (dist/)
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
